swagger: "2.0"
#openapi: "3.0.0"
info:
  description: "Описание API"
  version: "1.0.0"
  title: "МТС Коннект"
  #termsOfService: "http://swagger.io/terms/"
host: "eprx01.msk.mnc001.mcc250.pub.3gppnetwork.org"
tags:
- name: "ACS"
  description: "Сервер автоконфигурации."
- name: "Eventer"
  description: "Сервер автоконфигурации."
produces:
  - application/json  
paths:
  /acs/activate:
    get:
      tags:
      - "ACS"
      summary: ""
      description: "Метод активации пользователя в ядре, на eProxy и получение конфигурации для профиля."
      #operationId: "addPet"
      parameters:
      - in: "query"
        name: "code"
        description: "Код WebSSO авторизации для получения access_token. Приходит в редиректе от WebSSO. Example: ABC123"
        required: true
        type: "string"
      - in: "query"
        name: "device_token"
        description: "UUID"
        required: true
        type: string
      - in: "query"
        name: "app_version"
        description: "Example: 0.1.0a"
        required: true
        type: string
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            allOf:
              - properties:
                  Location:
                    type: "string"
                    example: "/profile?token=871e8fb0ea5ae9aa"
                    description: "URL переадресации ACS для получения профиля пользователя."
                  Retry-After:
                    type: "integer"
                    example: 3
                    description: "Время в секундах, через которое необходимо вызвать указанный URL."
              - $ref: '#/definitions/ApiErrorResponse'
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
  ApiErrorResponse:
    type: "object"
    properties:
      error:
        type: "integer"
        description: "Цифровой код ошибки:"
      error_code:
        type: "string"
        description: "Код ошибки из перечисления."
      error_type:
        type: "string"
        enum: [none, toast, alert]
      error_text:
        type: "string"
        description: "Текст для отображения пользователю в случае возникновении ошибки."
        